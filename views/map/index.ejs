<!-- This entire script template is used from the Google Maps API documentation located at https://developers.google.com/. -->
<!DOCTYPE html>
<html>
  <head>
    <link href="https://fonts.googleapis.com/css?family=Raleway" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="../../css/reset.css">
    <link rel="stylesheet" type="text/css" href="../../css/map.css">
  </head>
  <body>

  <div class='locations' id='allLocationsContainer'>
  <h1>Places of interest:</h1>
    <% for (let i=0; i < mapMarkers.length; i++) { %>
      <div id='singleListing'>
      <h2><%= mapMarkers[i].location %></h2>
      <p><%= mapMarkers[i].description %></p>
      <p><%= mapMarkers[i].price %></p>
      <p>User: <%= mapMarkers[i].username %></p>
      <p>Number of users following this travel log: <%= mapMarkers[i].favoriteUsers.length %></p>
      <p>For contact information,</p>
      <a href="/map/<%= mapMarkers[i]._id %>">click here to see more information</a>
      </div>
      <% } %>
  </div>

<!-- <div id='mapContainer'>
  <div id="map"></div>
  </div>
 -->
<link href="https://code.google.com/apis/maps/documentation/javascript/examples/default.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="http://maps.google.com/maps/api/js?key=AIzaSyDu1zOGCMJEMn2Ja45WRuyWFN_Rv7ZSh3c"></script>

  <script type="text/javascript">

    var geocoder;
    var map;

    // function getAllMyMarkers() {
    //   fetch('/map/allmarkers', {
    //     method: 'GET',
    //     credentials: 'include',
    //     headers: {
    //       'Content-Type' : 'application/json'
    //     },
    //     body: JSON.stringify(place)
    //   })
    //   .then(r => r.json())
    //   .then((data) => {
    //      // results = data
    //    console.log('=====',data)
    //       for( i = 0; i < allMapMarkers.length; i++ ) {
    //         var position = new google.maps.LatLng(allMapMarkers.lat, allMapMarkers.long);
    //         bounds.extend(position);
    //         marker = new google.maps.Marker({
    //           position: position,
    //           map: map,
    //           title: markers[i].title
    //       });
    //           gmarkers.push(marker);
    //       }

    //   })
    //    .catch(err => console.log(err));
    // }
    // create for loop or for each in .then with allMapMarkers

    function initialize() {
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(39.833333, -98.583333);
        var myOptions = {
        zoom: 4,
        center: latlng,
        mapTypeId: google.maps.MapTypeId.ROADMAP
        }
        let results;
        map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
        // getAllMyMarkers();
            fetch('/map', {
              method: 'GET',
              // credentials: 'include',
              // headers: {
              //   'Content-Type' : 'application/json'
              // },
              // body: JSON.stringify(place)
            })
            .then(r => r.json())
            .then((data) => {
               // results = data
               console.log('FETCHING ALL MARKERS');

                  for( i = 0; i < allMapMarkers.length; i++ ) {
                    var position = new google.maps.LatLng(allMapMarkers.lat, allMapMarkers.lng);
                    bounds.extend(position);
                    marker = new google.maps.Marker({
                      position: position,
                      map: map,
                      title: markers[i].title
                  });
                      gmarkers.push(marker);
                  }

            })
             .catch(err => console.log(err));
        }


    function codeAddress(event) {
        // console.log('Did it');
        var address = document.getElementById("address").value;
        // console.log(address);
        var contentString = "Google Maps";
        var sites = [
        ["this is a title", 52, 10, 10, "<div>This is the first site</div>"]
        ];

        geocoder.geocode( { 'address': address}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          map.setCenter(results[0].geometry.location);

          var marker = new google.maps.Marker({
              map: map,
              position: results[0].geometry.location,
              title: sites[0][0],
              zIndex: sites[3],
              html: sites[4]
            });

          var infowindow = new google.maps.InfoWindow({

              content: `<form action ="/map/delete/${marker._id}?_method=DELETE"><input type="submit" value="Delete"></form>`,
              //GIVING ERROR: Cannot GET /map/delete/undefined?

              maxWidth: 60
            });

          google.maps.event.addListener(marker, "click", function() {
          console.log('clicked!! yay')   // infowindow.setContent(this.html);
          infowindow.open(map, this); });

          map.setCenter(marker.position);
          marker.setMap(map);

          const place = {
            name: address,
            lat: results[0].geometry.location.lat(),
            lng: results[0].geometry.location.lng()
          }
          console.log(place);

          // do a POST fetch call AND SEND THE "place" as the body
          fetch('/map/markers', {
            method: 'POST',
            credentials: 'include',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(place)
          })
          .catch(err => console.log(err));

          } else {
            alert("Geocode was not successful for the following reason: " + status);
          }
       });
     }


</script>

<style type="text/css">
    #controls {
    position: relative;
    bottom: 1em;
    width: 400px;
    display: inline-block;
    /*padding: 0 0.5em 0.5em 0.5em;*/
    }
    html, body, #map_canvas {
            margin: 0 auto;
            width: 95%;
            height: 100%;
    }
</style>

<body onLoad="initialize()">
<h1>Places you've been:</h1><br>
  <div id="controls">
  <input id="address" type="textbox" name="listing[city]" placeholder="City">
  <input id="description" type="textbox" name="listing[description]" placeholder="Description (optional)">
  <input type="button" value="Submit" onClick="codeAddress()">

  </div>
  </div>
  <br>

  1. I want the submit to take the location and description and store it into mongo so that next time the same user logs in/page is refreshed the markers stay put.
  2. Take those saved pieces of info and have them load in the info window
  3. Create put and delete in the info boxes ( maybe only description will work)
  4. Create bucket list hover effect
  5. when hovered inputs will appear for user to put in their bucket list destinations
  6. create markers in different colors to pop up on page
  7. have the bucket list data saved


create save in infobox to then store into mongo

<div id="map_canvas"></div>

  </body>
</html>

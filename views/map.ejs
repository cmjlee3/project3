<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <title></title>
    <link rel="stylesheet" href="../../style.css">
</head>
<body>

  map.ejs!

  <!-- Fix Bucket list button -->
  <form method="get" action="/bucketlist">
      <button type="submit">Bucket List!</button>
  </form>

  <div id='mapContainer'>
    <div id="map"></div>
  </div>

<link href="http://code.google.com/apis/maps/documentation/javascript/examples/default.css" rel="stylesheet" type="text/css" />
<script src="http://maps.google.com/maps/api/js?v=3.5&amp;sensor=false"></script>

  <script type="text/javascript">

    var geocoder;
    var map;

    function initialize() {
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(39.833333, -98.583333);
        var myOptions = {
        zoom: 4,
        center: latlng,
        mapTypeId: google.maps.MapTypeId.ROADMAP
        }
        let results;
        map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
        fetch('/map/')
        .then(r => r.json())
        .then((data) => {
          results = data
          }
        )
        .catch(error => console.log(error))
        if(results) {
          results.forEach((result) => {
            codeAllAddresses(result);
          })
        }
      }

    function codeAllAddresses(address) {
      var contentString = "Google Maps";
        var sites = [
        ["this is a title", 52, 10, 10, "<div>This is the first site</div>"]
        ];

        geocoder.geocode( { 'address': address}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
        map.setCenter(results[0].geometry.location);
        var marker = new google.maps.Marker({
            map: map,
            position: results[0].geometry.location,
            // title: sites[0],
            // zIndex: sites[3],
            // html: sites[4]
          });
        console.log(map)
        var infowindow = new google.maps.InfoWindow({
            content: '<div>werk plz</div>',
            maxWidth: 60
          });

       google.maps.event.addListener(marker, "click", function() {
          console.log('clicked!! yay')
          // infowindow.setContent(this.html);
          infowindow.open(map, this);
        });

       map.setCenter(marker.position);
       marker.setMap(map);

        } else {
          alert("Geocode was not successful for the following reason: " + status);
            }
       });
    }

    function codeAddress(event) {

        var address = document.getElementById("address").value;
        console.log(address);
        var contentString = "Google Maps";
        var sites = [
        ["this is a title", 52, 10, 10, "<div>This is the first site</div>"]
        ];

        geocoder.geocode( { 'address': address}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
        map.setCenter(results[0].geometry.location);

        var marker = new google.maps.Marker({
            map: map,
            position: results[0].geometry.location,
            title: sites[0],
            zIndex: sites[3],
            html: sites[4]
          });
        var infowindow = new google.maps.InfoWindow({
            content: '<div>werk plz</div>',
            maxWidth: 60
          });

       google.maps.event.addListener(marker, "click", function() {
          console.log('clicked!! yay')
          // infowindow.setContent(this.html);
          infowindow.open(map, this);
        });

       map.setCenter(marker.position);
       marker.setMap(map);
       fetch('INSERT REAL ROUTE HERE', {
        method: 'POST',
        body: {
          marker: address
        }
       }).then(r = r.json())
       .then(data => console.log(data))
       .catch(error => console.log(error))

        } else {
          alert("Geocode was not successful for the following reason: " + status);
            }
       });
     }



</script>

<style type="text/css">
    #controls {
    position: relative;
    bottom: 1em;
    width: 400px;
    display: inline-block;
    /*padding: 0 0.5em 0.5em 0.5em;*/
    }
    html, body, #map_canvas {
            margin: 0;
            width: 100%;
            height: 100%;
    }
</style>

<body onLoad="initialize()">
  <div id="controls">
  <input id="address" type="textbox" placeholder="City">
  <input id="description" type="textbox" placeholder="Description (optional)">
  <input type="button" value="Submit" onClick="codeAddress(  )">
  </div>
  </div>

  1. I want the submit to take the location and description and store it into mongo so that next time the same user logs in/page is refreshed the markers stay put.
  2. Take those saved pieces of info and have them load in the info window
  3. Create put and delete in the info boxes ( maybe only description will work)
  4. Create bucket list hover effect
  5. when hovered inputs will appear for user to put in their bucket list destinations
  6. create markers in different colors to pop up on page
  7. have the bucket list data saved


<div id="map_canvas"></div>

</body>
</html>
